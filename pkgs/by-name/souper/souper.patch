diff --git a/CMakeLists.txt b/CMakeLists.txt
index e0652ba..842a8ae 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.8)
 project(Souper)
 
-set(CMAKE_MACOSX_RPATH NEW)
+# set(CMAKE_MACOSX_RPATH NEW)
 
 if(NOT CMAKE_BUILD_TYPE)
   set(CMAKE_BUILD_TYPE Release CACHE STRING
@@ -11,7 +11,12 @@ endif()
 if (NOT LLVM_BUILD_TYPE)
   set(LLVM_BUILD_TYPE ${CMAKE_BUILD_TYPE})
 endif()
-set(LLVM_CONFIG_EXECUTABLE ${CMAKE_SOURCE_DIR}/third_party/llvm-${LLVM_BUILD_TYPE}-install/bin/llvm-config)
+#set(LLVM_CONFIG_EXECUTABLE ${CMAKE_SOURCE_DIR}/third_party/llvm-${LLVM_BUILD_TYPE}-install/bin/llvm-config)
+set(LLVM_CONFIG_EXECUTABLE_ llvm-config)
+find_path(
+	LLVM_CONFIG_EXECUTABLE
+    NAMES "llvm-config"
+)
 if(NOT EXISTS ${LLVM_CONFIG_EXECUTABLE})
   message(FATAL_ERROR "llvm-config could not be found!")
 endif()
@@ -26,42 +31,42 @@ execute_process(
   OUTPUT_STRIP_TRAILING_WHITESPACE
 )
 
-execute_process(
-  COMMAND ${LLVM_CONFIG_EXECUTABLE} --cppflags
-  OUTPUT_VARIABLE LLVM_CXXFLAGS
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-
-set(LLVM_CXXFLAGS "${LLVM_CXXFLAGS} -fno-exceptions -fno-rtti -Wno-deprecated-enum-enum-conversion")
-
-execute_process(
-  COMMAND ${LLVM_CONFIG_EXECUTABLE} --libs
-  OUTPUT_VARIABLE LLVM_LIBS
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-
-execute_process(
-  COMMAND ${LLVM_CONFIG_EXECUTABLE} --system-libs
-  OUTPUT_VARIABLE LLVM_SYSTEM_LIBS
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
-set(LLVM_LIBS "${LLVM_LIBS} ${LLVM_SYSTEM_LIBS}")
-string(STRIP ${LLVM_LIBS} LLVM_LIBS)
-
-execute_process(
-  COMMAND ${LLVM_CONFIG_EXECUTABLE} --ldflags
-  OUTPUT_VARIABLE LLVM_LDFLAGS
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
+#execute_process(
+#  COMMAND ${LLVM_CONFIG_EXECUTABLE} --cppflags
+#  OUTPUT_VARIABLE LLVM_CXXFLAGS
+#  OUTPUT_STRIP_TRAILING_WHITESPACE
+#)
+
+#set(LLVM_CXXFLAGS "${LLVM_CXXFLAGS} -fno-exceptions -fno-rtti -Wno-deprecated-enum-enum-conversion")
+
+#execute_process(
+#  COMMAND ${LLVM_CONFIG_EXECUTABLE} --libs
+#  OUTPUT_VARIABLE LLVM_LIBS
+#  OUTPUT_STRIP_TRAILING_WHITESPACE
+#)
+#
+#execute_process(
+#  COMMAND ${LLVM_CONFIG_EXECUTABLE} --system-libs
+#  OUTPUT_VARIABLE LLVM_SYSTEM_LIBS
+#  OUTPUT_STRIP_TRAILING_WHITESPACE
+#)
+#set(LLVM_LIBS "${LLVM_LIBS} ${LLVM_SYSTEM_LIBS}")
+#string(STRIP ${LLVM_LIBS} LLVM_LIBS)
+#
+#execute_process(
+#  COMMAND ${LLVM_CONFIG_EXECUTABLE} --ldflags
+#  OUTPUT_VARIABLE LLVM_LDFLAGS
+#  OUTPUT_STRIP_TRAILING_WHITESPACE
+#)
 
 set(PASS_LDFLAGS "${LLVM_LDFLAGS}")
 set(LLVM_LDFLAGS "${LLVM_LDFLAGS} -L ${ZSTD_LIBRARY_DIR}")
 
-execute_process(
-  COMMAND ${LLVM_CONFIG_EXECUTABLE} --bindir
-  OUTPUT_VARIABLE LLVM_BINDIR
-  OUTPUT_STRIP_TRAILING_WHITESPACE
-)
+#execute_process(
+#  COMMAND ${LLVM_CONFIG_EXECUTABLE} --bindir
+#  OUTPUT_VARIABLE LLVM_BINDIR
+#  OUTPUT_STRIP_TRAILING_WHITESPACE
+#)
 
 execute_process(
   COMMAND ${LLVM_CONFIG_EXECUTABLE} --obj-root
@@ -285,21 +290,21 @@ add_executable(souper
   tools/souper.cpp
 )
 
-add_executable(internal-solver-test
-  tools/internal-solver-test.cpp
-)
-
-add_executable(lexer-test
-  tools/lexer-test.cpp
-)
-
-add_executable(parser-test
-  tools/parser-test.cpp
-)
-
-add_executable(souper-check
-  tools/souper-check.cpp
-)
+#add_executable(internal-solver-test
+#  tools/internal-solver-test.cpp
+#)
+#
+#add_executable(lexer-test
+#  tools/lexer-test.cpp
+#)
+#
+#add_executable(parser-test
+#  tools/parser-test.cpp
+#)
+#
+#add_executable(souper-check
+#  tools/souper-check.cpp
+#)
 
 add_executable(souper-interpret
   tools/souper-interpret.cpp
@@ -313,33 +318,33 @@ add_executable(souper2llvm
   tools/souper2llvm.cpp
 )
 
-add_executable(extractor_tests
-  unittests/Extractor/ExtractorTests.cpp
-)
-
-add_executable(inst_tests
-  unittests/Inst/InstTests.cpp
-)
-
-add_executable(parser_tests
-  unittests/Parser/ParserTests.cpp
-)
-
-add_executable(codegen_tests
-  unittests/Codegen/CodegenTests.cpp
-)
-
-add_executable(interpreter_tests
-  unittests/Interpreter/InterpreterInfra.cpp
-  unittests/Interpreter/InterpreterTests.cpp)
+#add_executable(extractor_tests
+#  unittests/Extractor/ExtractorTests.cpp
+#)
+#
+#add_executable(inst_tests
+#  unittests/Inst/InstTests.cpp
+#)
+#
+#add_executable(parser_tests
+#  unittests/Parser/ParserTests.cpp
+#)
+#
+#add_executable(codegen_tests
+#  unittests/Codegen/CodegenTests.cpp
+#)
+#
+#add_executable(interpreter_tests
+#  unittests/Interpreter/InterpreterInfra.cpp
+#  unittests/Interpreter/InterpreterTests.cpp)
 
 set(LLVM_LDFLAGS "${LLVM_LDFLAGS}")
 
-add_executable(bulk_tests
-  unittests/Interpreter/InterpreterInfra.cpp
-  utils/gen-xfer-funcs/BulkTests.cpp
-  utils/gen-xfer-funcs/Verification.cpp)
-target_include_directories(bulk_tests PUBLIC "${CMAKE_SOURCE_DIR}/unittests/Interpreter")
+#add_executable(bulk_tests
+#  unittests/Interpreter/InterpreterInfra.cpp
+#  utils/gen-xfer-funcs/BulkTests.cpp
+#  utils/gen-xfer-funcs/Verification.cpp)
+#target_include_directories(bulk_tests PUBLIC "${CMAKE_SOURCE_DIR}/unittests/Interpreter")
 
 configure_file(
   ${CMAKE_SOURCE_DIR}/utils/gen-xfer-funcs/run_n.pl.in
@@ -371,7 +376,7 @@ configure_file(
   COPYONLY
 )
 
-foreach(target souper internal-solver-test lexer-test parser-test souper-check count-insts
+foreach(target souper count-insts
                souper2llvm souper-interpret
                souperExtractor souperInfer souperInst souperKVStore souperParser
                souperSMTLIB2 souperTool souperPass souperPassProfileAll kleeExpr
@@ -379,10 +384,10 @@ foreach(target souper internal-solver-test lexer-test parser-test souper-check c
   set_target_properties(${target} PROPERTIES COMPILE_FLAGS "${LLVM_CXXFLAGS}")
   target_include_directories(${target} PRIVATE "${LLVM_INCLUDEDIR}")
 endforeach()
-foreach(target extractor_tests inst_tests parser_tests interpreter_tests bulk_tests codegen_tests)
-  set_target_properties(${target} PROPERTIES COMPILE_FLAGS "${GTEST_CXXFLAGS} ${LLVM_CXXFLAGS}")
-  target_include_directories(${target} PRIVATE "${LLVM_INCLUDEDIR}" "${GTEST_INCLUDEDIR}")
-endforeach()
+#foreach(target extractor_tests inst_tests parser_tests interpreter_tests bulk_tests codegen_tests)
+#  set_target_properties(${target} PROPERTIES COMPILE_FLAGS "${GTEST_CXXFLAGS} ${LLVM_CXXFLAGS}")
+#  target_include_directories(${target} PRIVATE "${LLVM_INCLUDEDIR}" "${GTEST_INCLUDEDIR}")
+#endforeach()
 
 # static
 target_link_libraries(kleeExpr ${LLVM_LIBS} ${LLVM_LDFLAGS})
@@ -402,19 +407,19 @@ target_link_libraries(souperPassProfileAll ${PASS_LDFLAGS} ${HIREDIS_LIBRARY} ${
 
 # executables
 target_link_libraries(souper souperExtractor souperKVStore souperParser souperSMTLIB2 souperTool kleeExpr ${HIREDIS_LIBRARY} ${ALIVE_LIBRARY} ${Z3_LIBRARY})
-target_link_libraries(internal-solver-test souperSMTLIB2)
-target_link_libraries(lexer-test souperParser)
-target_link_libraries(parser-test souperParser)
-target_link_libraries(souper-check souperTool souperExtractor souperKVStore souperSMTLIB2 souperParser ${HIREDIS_LIBRARY} ${ALIVE_LIBRARY} ${Z3_LIBRARY})
+#target_link_libraries(internal-solver-test souperSMTLIB2)
+#target_link_libraries(lexer-test souperParser)
+#target_link_libraries(parser-test souperParser)
+#target_link_libraries(souper-check souperTool souperExtractor souperKVStore souperSMTLIB2 souperParser ${HIREDIS_LIBRARY} ${ALIVE_LIBRARY} ${Z3_LIBRARY})
 target_link_libraries(souper-interpret souperTool souperExtractor souperKVStore souperSMTLIB2 souperParser ${HIREDIS_LIBRARY} ${ALIVE_LIBRARY} ${Z3_LIBRARY})
 target_link_libraries(count-insts souperParser)
 target_link_libraries(souper2llvm souperParser souperCodegen)
-target_link_libraries(extractor_tests souperExtractor souperParser ${GTEST_LIBS} ${ALIVE_LIBRARY})
-target_link_libraries(inst_tests souperInfer souperPass souperInst souperExtractor ${GTEST_LIBS} ${ALIVE_LIBRARY})
-target_link_libraries(parser_tests souperParser ${GTEST_LIBS} ${ALIVE_LIBRARY})
-target_link_libraries(codegen_tests souperCodegen souperInst ${GTEST_LIBS} ${ALIVE_LIBRARY})
-target_link_libraries(interpreter_tests souperInfer souperInst ${GTEST_LIBS} ${ALIVE_LIBRARY})
-target_link_libraries(bulk_tests souperInfer souperInst ${GTEST_LIBS} ${ALIVE_LIBRARY} ${Z3_LIBRARY})
+#target_link_libraries(extractor_tests souperExtractor souperParser ${GTEST_LIBS} ${ALIVE_LIBRARY})
+#target_link_libraries(inst_tests souperInfer souperPass souperInst souperExtractor ${GTEST_LIBS} ${ALIVE_LIBRARY})
+#target_link_libraries(parser_tests souperParser ${GTEST_LIBS} ${ALIVE_LIBRARY})
+#target_link_libraries(codegen_tests souperCodegen souperInst ${GTEST_LIBS} ${ALIVE_LIBRARY})
+#target_link_libraries(interpreter_tests souperInfer souperInst ${GTEST_LIBS} ${ALIVE_LIBRARY})
+#target_link_libraries(bulk_tests souperInfer souperInst ${GTEST_LIBS} ${ALIVE_LIBRARY} ${Z3_LIBRARY})
 
 set(TEST_SYNTHESIS "ON" CACHE STRING "Enable additional, computationally intensive synthesis tests")
 set(TEST_LONG_DURATION_SYNTHESIS "" CACHE STRING "Enable long duration (> 10 min) synthesis tests")
@@ -434,10 +439,10 @@ configure_file(
   ${CMAKE_BINARY_DIR}/souper-check-gdb.py
 )
 
-add_custom_target(check
-  COMMAND ${CMAKE_BINARY_DIR}/run_lit
-  DEPENDS extractor_tests inst_tests parser-test parser_tests profileRuntime souper souper-check souper-interpret souperPass souper2llvm souperPassProfileAll count-insts interpreter_tests bulk_tests codegen_tests
-  USES_TERMINAL)
+#add_custom_target(check
+#  COMMAND ${CMAKE_BINARY_DIR}/run_lit
+#  DEPENDS extractor_tests inst_tests parser-test parser_tests profileRuntime souper souper-check souper-interpret souperPass souper2llvm souperPassProfileAll count-insts interpreter_tests bulk_tests codegen_tests
+#  USES_TERMINAL)
 
 # we want assertions even in release mode!
 string(REPLACE "-DNDEBUG" "" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
@@ -463,3 +468,7 @@ configure_file(${CMAKE_SOURCE_DIR}/utils/sclang.in ${CMAKE_BINARY_DIR}/sclang @O
 configure_file(${CMAKE_SOURCE_DIR}/utils/sclang.in ${CMAKE_BINARY_DIR}/sclang++ @ONLY)
 
 add_subdirectory(docs)
+
+message(STATUS ${LLVM_CXXFLAGS})
+message(STATUS ${LLVM_LDFLAGS})
+message(STATUS "kek")
